# Generated by Django 3.1.2 on 2020-12-18 14:40

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('profiles', '0003_auto_20201128_1451'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthorshipRequestBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_on', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('context', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('published_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Publish', 'Publish')], default='Draft', max_length=10)),
                ('media_image', models.ImageField(blank=True, null=True, upload_to='bundle_image')),
                ('media_file', models.FileField(blank=True, null=True, upload_to='bundle_papers/%Y/%m/%d/')),
                ('slug', models.SlugField(unique=True)),
                ('git_url', models.URLField(blank=True)),
                ('forkable', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-published_on', 'title', 'context'),
            },
        ),
        migrations.CreateModel(
            name='ReceiveAuthorshipRequest',
            fields=[
                ('authorshiprequestbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.authorshiprequestbase')),
            ],
            bases=('events.authorshiprequestbase',),
        ),
        migrations.CreateModel(
            name='SubmitAuthorshipRequest',
            fields=[
                ('authorshiprequestbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.authorshiprequestbase')),
            ],
            bases=('events.authorshiprequestbase',),
        ),
        migrations.CreateModel(
            name='Fork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('bundle_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fork_origin', to='events.bundle')),
                ('bundle_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forked_into', to='events.bundle')),
            ],
            options={
                'ordering': ('-created_on',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.TextField()),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='events.bundle')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_profile', to='profiles.profile')),
            ],
            options={
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='Clap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('claped_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('bundle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bundle', to='events.bundle')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='profiles.profile')),
            ],
            options={
                'ordering': ('-claped_on',),
            },
        ),
        migrations.AddField(
            model_name='bundle',
            name='claps',
            field=models.ManyToManyField(blank=True, related_name='bundle_liked', through='events.Clap', to='profiles.Profile'),
        ),
        migrations.AddField(
            model_name='bundle',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bundle_creator', to='profiles.profile'),
        ),
        migrations.AddField(
            model_name='bundle',
            name='fork',
            field=models.ManyToManyField(related_name='forks', through='events.Fork', to='events.Bundle'),
        ),
        migrations.AddField(
            model_name='bundle',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='authorshiprequestbase',
            name='bundle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bundle_for_request', to='events.bundle'),
        ),
        migrations.AddField(
            model_name='authorshiprequestbase',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requesting_profile', to='profiles.profile'),
        ),
        migrations.AddField(
            model_name='bundle',
            name='co_authors',
            field=models.ManyToManyField(related_name='bundle_co_creators', through='events.SubmitAuthorshipRequest', to='profiles.Profile'),
        ),
        migrations.AddField(
            model_name='bundle',
            name='co_authors_request',
            field=models.ManyToManyField(related_name='bundle_co_creators_requests', through='events.ReceiveAuthorshipRequest', to='profiles.Profile'),
        ),
    ]
